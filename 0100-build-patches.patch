From 9fa4c41e23deb6980223a01ad0b9017015ad8de3 Mon Sep 17 00:00:00 2001
From: Albert I <kras@raphielgang.org>
Date: Sun, 29 Jun 2025 20:39:27 +0800
Subject: [PATCH 1/4] Create alias to make that invokes CPU tuning
 optimizations

---
 linux-cachyos/PKGBUILD | 29 +++++++++++++++--------------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/linux-cachyos/PKGBUILD b/linux-cachyos/PKGBUILD
index c18362ec..b3e77692 100644
--- a/linux-cachyos/PKGBUILD
+++ b/linux-cachyos/PKGBUILD
@@ -275,6 +275,7 @@ export KBUILD_BUILD_USER="$pkgbase"
 export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"
 
 _die() { error "$@" ; exit 1; }
+_make() { make KCFLAGS="-march=x86-64-v3 -mtune=raptorlake" "$@" ; }
 
 prepare() {
     cd "$_srcname"
@@ -488,7 +489,7 @@ prepare() {
     if [ "$_localmodcfg" = "yes" ]; then
         if [ -e "$_localmodcfg_path" ]; then
             echo "Running Steven Rostedt's make localmodconfig now"
-            make "${BUILD_FLAGS[@]}" LSMOD="${_localmodcfg_path}" localmodconfig
+            _make "${BUILD_FLAGS[@]}" LSMOD="${_localmodcfg_path}" localmodconfig
         else
             _die "No modprobed.db data found"
         fi
@@ -496,19 +497,19 @@ prepare() {
 
     ### Rewrite configuration
     echo "Rewrite configuration..."
-    make "${BUILD_FLAGS[@]}" prepare
-    yes "" | make "${BUILD_FLAGS[@]}" config >/dev/null
+    _make "${BUILD_FLAGS[@]}" prepare
+    yes "" | _make "${BUILD_FLAGS[@]}" config >/dev/null
     diff -u ../config .config || :
 
     ### Prepared version
-    make -s kernelrelease > version
+    _make -s kernelrelease > version
     echo "Prepared $pkgbase version $(<version)"
 
     ### Running make nconfig
-    [ "$_makenconfig" = "yes" ] && make "${BUILD_FLAGS[@]}" nconfig
+    [ "$_makenconfig" = "yes" ] && _make "${BUILD_FLAGS[@]}" nconfig
 
     ### Running make xconfig
-    [ "$_makexconfig" = "yes" ] &&  make "${BUILD_FLAGS[@]}" xconfig
+    [ "$_makexconfig" = "yes" ] &&  _make "${BUILD_FLAGS[@]}" xconfig
 
     ### Save configuration for later reuse
     echo "Save configuration for later reuse..."
@@ -545,8 +546,8 @@ _sign_modules() {
 
 build() {
     cd "$_srcname"
-    make "${BUILD_FLAGS[@]}" -j"$(nproc)" all
-    make -C tools/bpf/bpftool vmlinux.h feature-clang-bpf-co-re=1
+    _make "${BUILD_FLAGS[@]}" -j"$(nproc)" all
+    _make -C tools/bpf/bpftool vmlinux.h feature-clang-bpf-co-re=1
 
     local MODULE_FLAGS=(
        KERNEL_UNAME="${_kernuname}"
@@ -557,13 +558,13 @@ build() {
     if [ "$_build_nvidia" = "yes" ]; then
         MODULE_FLAGS+=(NV_EXCLUDE_BUILD_MODULES='__EXCLUDE_MODULES')
         cd "${srcdir}/${_nv_pkg}/kernel"
-        make "${BUILD_FLAGS[@]}" "${MODULE_FLAGS[@]}" -j"$(nproc)" modules
+        _make "${BUILD_FLAGS[@]}" "${MODULE_FLAGS[@]}" -j"$(nproc)" modules
     fi
 
     if [ "$_build_nvidia_open" = "yes" ]; then
         cd "${srcdir}/${_nv_open_pkg}"
         MODULE_FLAGS+=(IGNORE_CC_MISMATCH=yes)
-        CFLAGS= CXXFLAGS= LDFLAGS= make "${BUILD_FLAGS[@]}" "${MODULE_FLAGS[@]}" -j"$(nproc)" modules
+        CFLAGS= CXXFLAGS= LDFLAGS= _make "${BUILD_FLAGS[@]}" "${MODULE_FLAGS[@]}" -j"$(nproc)" modules
     fi
 
     if [ "$_build_zfs" = "yes" ]; then
@@ -578,7 +579,7 @@ build() {
             --libdir=/usr/lib --datadir=/usr/share --includedir=/usr/include \
             --with-udevdir=/lib/udev --libexecdir=/usr/lib/zfs --with-config=kernel \
             --with-linux="${srcdir}/$_srcname"
-        make "${BUILD_FLAGS[@]}"
+        _make "${BUILD_FLAGS[@]}"
     fi
 
 }
@@ -599,13 +600,13 @@ _package() {
     echo "Installing boot image..."
     # systemd expects to find the kernel here to allow hibernation
     # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
-    install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"
+    install -Dm644 "$(_make -s image_name)" "$modulesdir/vmlinuz"
 
     # Used by mkinitcpio to name the kernel
     echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"
 
     echo "Installing modules..."
-    ZSTD_CLEVEL=19 make "${BUILD_FLAGS[@]}" INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 \
+    ZSTD_CLEVEL=19 _make "${BUILD_FLAGS[@]}" INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 \
         DEPMOD=/doesnt/exist  modules_install  # Suppress depmod
 
     # remove build links
@@ -672,7 +673,7 @@ _package-headers() {
     fi
 
     echo "Installing unstripped VDSO..."
-    make INSTALL_MOD_PATH="$pkgdir/usr" vdso_install \
+    _make INSTALL_MOD_PATH="$pkgdir/usr" vdso_install \
       link=  # Suppress build-id symlinks
 
     echo "Removing unneeded architectures..."
-- 
2.50.1


From 16b60f7fd1ff1d0c3b4ea7abe16068feba509613 Mon Sep 17 00:00:00 2001
From: Albert I <kras@raphielgang.org>
Date: Sun, 29 Jun 2025 20:55:06 +0800
Subject: [PATCH 2/4] Hard depend on same LLVM tools used to build kernel

---
 linux-cachyos/PKGBUILD | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/linux-cachyos/PKGBUILD b/linux-cachyos/PKGBUILD
index b3e77692..38b10678 100644
--- a/linux-cachyos/PKGBUILD
+++ b/linux-cachyos/PKGBUILD
@@ -210,7 +210,8 @@ source=(
 
 # LLVM makedepends
 if _is_lto_kernel; then
-    makedepends+=(clang llvm lld)
+    _llvm_pkgver=$(pacman -Si llvm | grep ^Version | head -1 | grep -o '[^ :][0-9].[^ -]*')
+    makedepends+=("clang=${_llvm_pkgver}" "lld=${_llvm_pkgver}" "llvm=${_llvm_pkgver}")
     source+=("${_patchsource}/misc/dkms-clang.patch")
     BUILD_FLAGS=(
         CC=clang
@@ -618,7 +619,7 @@ _package-headers() {
     depends=('pahole' "${pkgbase}")
 
     if _is_lto_kernel; then
-        depends+=(clang llvm lld)
+        depends+=("clang=${_llvm_pkgver}" "lld=${_llvm_pkgver}" "llvm=${_llvm_pkgver}")
     fi
 
     cd "${_srcname}"
-- 
2.50.1


From c9dc5f01a40ef2847ab8b48595eb87ac63bc633f Mon Sep 17 00:00:00 2001
From: Albert I <kras@raphielgang.org>
Date: Sun, 29 Jun 2025 21:26:47 +0800
Subject: [PATCH 3/4] Package kernel signing key

---
 linux-cachyos/PKGBUILD | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/linux-cachyos/PKGBUILD b/linux-cachyos/PKGBUILD
index 38b10678..e43c4c3f 100644
--- a/linux-cachyos/PKGBUILD
+++ b/linux-cachyos/PKGBUILD
@@ -782,12 +782,22 @@ _package-nvidia-open(){
     find "$pkgdir" -name '*.ko' -exec zstd --rm -19 -T0 {} +
 }
 
+_package-signkey() {
+    pkgdesc="Signing key used for the ${pkgdesc} kernel"
+    depends=("${pkgbase}-headers=${pkgver}-${pkgrel}")
+
+    cd "${_srcname}"
+    local builddir="$pkgdir/usr/lib/modules/$(<version)/build"
+    install -Dt "${builddir}/certs" -m644 certs/signing_key.{pem,x509}
+}
+
 pkgname=("$pkgbase")
 [ "$_build_debug" = "yes" ] && pkgname+=("$pkgbase-dbg")
 pkgname+=("$pkgbase-headers")
 [ "$_build_zfs" = "yes" ] && pkgname+=("$pkgbase-zfs")
 [ "$_build_nvidia" = "yes" ] && pkgname+=("$pkgbase-nvidia")
 [ "$_build_nvidia_open" = "yes" ] && pkgname+=("$pkgbase-nvidia-open")
+pkgname+=("${pkgbase}-signkey")
 for _p in "${pkgname[@]}"; do
     eval "package_$_p() {
     $(declare -f "_package${_p#$pkgbase}")
-- 
2.50.1


From 23096635ee3e33f889f07c123a592a4395bcbf52 Mon Sep 17 00:00:00 2001
From: Albert I <kras@raphielgang.org>
Date: Thu, 21 Aug 2025 20:09:33 +0800
Subject: [PATCH 4/4] Include config overrides

---
 linux-cachyos/PKGBUILD | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/linux-cachyos/PKGBUILD b/linux-cachyos/PKGBUILD
index e43c4c3f..23f4dc9f 100644
--- a/linux-cachyos/PKGBUILD
+++ b/linux-cachyos/PKGBUILD
@@ -150,6 +150,9 @@
 # Enable this after the profiles have been generated
 : "${_propeller_profiles:=no}"
 
+# Include config overrides
+source "$PWD/PKGBUILD.overrides"
+
 # ATTENTION: Do not modify after this line
 _is_lto_kernel() {
     [[ "$_use_llvm_lto" = "thin" || "$_use_llvm_lto" = "full"  || "$_use_llvm_lto" = "thin-dist" ]]
-- 
2.50.1

